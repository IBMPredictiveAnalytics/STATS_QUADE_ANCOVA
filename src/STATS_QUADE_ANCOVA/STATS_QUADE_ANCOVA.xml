<?xml version="1.0" encoding="UTF-8"?><Extension debug="false" version="1.0" xmlns="http://spss.com/clementine/extensions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://spss.com/clementine/extensions http://xml.spss.com/clementine/extensions/CLEFSpecificationFile.xsd">
  <ExtensionDetails copyright="Licensed Materials - Property of IBM.  IBM SPSS Products: Statistics Common (C) Copyright IBM Corp. 1989, 2020.  US Government Users Restricted Rights - Use, duplication or  disclosure restricted by GSA ADP Schedule Contract with IBM Corp." description="" id="STATS_QUADE_ANCOVA" label="" provider="SPSS, Inc." providerTag="spss" version="1.0"/>
  <Resources>
    <Bundle id="bundle1" path="STATS_QUADE_ANCOVA" type="properties"/>
  </Resources>
  <CommonObjects>
    <Actions>
      <Action id="STATS_QUADE_ANCOVA_action" imagePath="IBMdialogicon.png" label="Quade Nonparametric ANCOVA" labelKey="STATS_QUADE_ANCOVA_action.LABEL"/>
    </Actions>
  </CommonObjects>
  <UserInterface>
    <Controls>
      <MenuItem action="STATS_QUADE_ANCOVA_action" offset="0" previousId="" showIcon="true" spssMenu="Analyze.analyze_nonparam_tests"/>
    </Controls>
  </UserInterface>
  <Node id="STATS_QUADE_ANCOVA" label="Quade Nonparametric Analysis of Covariance" labelKey="STATS_QUADE_ANCOVA.LABEL" type="modelBuilder">
    <Properties>
      <Property addOns="[Python]" name="STATS_QUADE_ANCOVA" syntax="PRESERVE.&#10;begin program python3.&#10;import tempfile, spss, random, spssaux&#10;try:&#10;    tempdir = tempfile.gettempdir()&#10;    spss.Submit(r&quot;&quot;&quot;CD &quot;%s&quot;.&quot;&quot;&quot; % tempdir)&#10;    spss.Submit(&quot;&quot;&quot;SET PRINTBACK=OFF MPRINT=OFF.&quot;&quot;&quot;)&#10;    activeds = spss.ActiveDataset()&#10;    if activeds == &quot;*&quot;:&#10;        activeds = &quot;D&quot; + str(random.random()+.01)&#10;        spss.Submit(&quot;DATASET NAME %s&quot; % activeds)&#10;    wtvar=spss.GetWeightVar()&#10;    if wtvar == None:&#10;        spss.Submit(r&quot;&quot;&quot;&#10;USE ALL.&#10;SAVE OUTFILE='Quade_temp.sav'&#10;  /KEEP=%%group%% %%dep%% %%cov%%.&#10;GET FILE='Quade_temp.sav'.&#10;&quot;&quot;&quot;)&#10;    else:&#10;        spss.Submit(r&quot;&quot;&quot;&#10;DO IF %s &gt;= 1.&quot;&quot;&quot; % wtvar)&#10;        spss.Submit(r&quot;&quot;&quot;&#10;+ LOOP #i=1 TO %s.&quot;&quot;&quot; % wtvar)&#10;        spss.Submit(r&quot;&quot;&quot;&#10;XSAVE OUTFILE='Quade_temp.sav'&#10;  /KEEP=%%group%% %%dep%% %%cov%%&#10;  /DROP=%s.&quot;&quot;&quot; % wtvar)&#10;        spss.Submit(r&quot;&quot;&quot;&#10;+ END LOOP.&#10;END IF.&#10;EXECUTE.&#10;GET FILE='Quade_temp.sav'.&#10;&quot;&quot;&quot;)&#10;    spss.Submit(r&quot;&quot;&quot;&#10;COUNT miss__=%%group%% %%dep%% %%cov%% (MISSING).&#10;SELECT IF miss__=0.&#10;SORT CASES BY %%group%%.&#10;DATASET DECLARE Quade_temp1.&#10;AGGREGATE&#10;  /OUTFILE='Quade_temp1'&#10;  /PRESORTED&#10;  /BREAK=%%group%%&#10;  /N_BREAK=N.&#10;OMS /SELECT ALL EXCEPT=WARNINGS &#10;  /IF COMMANDS=['Matrix'] &#10;  /DESTINATION VIEWER=NO&#10;  /TAG='Quade_NoMatrix'.&#10;DATASET DECLARE Quade_out1 WINDOW=HIDDEN.&#10;DATASET DECLARE Quade_out2 WINDOW=HIDDEN.&#10;MATRIX.&#10;GET data&#10;  /VARIABLES=%%group%% %%dep%% %%cov%%.&#10;COMPUTE n=NROW(data).&#10;COMPUTE g=DESIGN(data(:,1)).&#10;COMPUTE dfh=NCOL(g)-1.&#10;COMPUTE dfe=n-NCOL(g).&#10;COMPUTE y=RNKORDER(data(:,2)).&#10;COMPUTE ncov=NCOL(data)-2.&#10;COMPUTE x=MAKE(n,1,1).&#10;LOOP #j=1 TO ncov.&#10;+ COMPUTE x={x,RNKORDER(data(:,#j+2))}.&#10;END LOOP.&#10;COMPUTE y=y-x*INV(SSCP(x))*T(x)*y.&#10;COMPUTE sst=MSSQ(y).&#10;COMPUTE sse=MSSQ(y-g*INV(SSCP(g))*T(g)*y).&#10;COMPUTE ssh=sst-sse.&#10;COMPUTE fstat=(ssh/dfh)/(sse/dfe).&#10;COMPUTE pval=1-FCDF(fstat,dfh,dfe).&#10;SAVE {fstat,dfh,dfe,pval}&#10;   /OUTFILE='Quade_out1'&#10;   /VARIABLES=F,DFH,DFE,sig.&#10;COMPUTE countvec=T(CSUM(g)).&#10;COMPUTE grpmean=T(g)*y&amp;/countvec.&#10;COMPUTE k=NROW(grpmean).&#10;COMPUTE diff=MAKE(k*(k-1)/2,1,0).&#10;COMPUTE sediff=MAKE(k*(k-1)/2,1,0).&#10;COMPUTE h=1.&#10;LOOP i=1 TO k-1.&#10;+  LOOP j=i+1 TO k.&#10;+    COMPUTE diff(h)=grpmean(i)-grpmean(j).&#10;+    COMPUTE sediff(h)=SQRT((sse/dfe)*(1/countvec(i)+1/countvec(j))).&#10;+    COMPUTE h=h+1.&#10;+  END LOOP.&#10;END LOOP.&#10;COMPUTE tvec=diff&amp;/sediff.&#10;COMPUTE dfvec=MAKE(NROW(tvec),1,dfe).&#10;COMPUTE pvec=MAKE(NROW(tvec),1,1)-FCDF(tvec&amp;**2,1,dfe).&#10;SAVE {tvec,dfvec,pvec}&#10;  /OUTFILE='Quade_out2'&#10;  /VARIABLES=t,DF,pval.&#10;END MATRIX.&#10;OMSEND TAG=['Quade_NoMatrix'].&#10;DATASET ACTIVATE Quade_temp1 WINDOW=ASIS.&#10;OMS /SELECT ALL EXCEPT=WARNINGS &#10;  /IF COMMANDS=['Alter Type'] &#10;  /DESTINATION VIEWER=NO&#10;  /TAG='Quade_NoAT'.&#10;ALTER TYPE ALL (AMIN)&#10;  /PRINT NONE.&#10;OMSEND TAG=['Quade_NoAT'].&#10;&quot;&quot;&quot;)&#10;    from spss import CellText&#10;    rlabels1=[]&#10;    cur=spss.Cursor(isBinary=False)&#10;    for i in range(0,spss.GetCaseCount()):&#10;        datarow=cur.fetchone()&#10;        rlabels1.append(datarow[0])&#10;    cur.close()&#10;    k=len(rlabels1)&#10;    rlabels2=[]&#10;    for i in range(k-1):&#10;        for j in range(i+1,k):&#10;            rlabels2.append(rlabels1[i] + &quot; vs. &quot; + rlabels1[j])&#10;    spss.Submit(r&quot;&quot;&quot;&#10;DATASET ACTIVATE Quade_out2 WINDOW=ASIS.&#10;COMPUTE DF=RND(DF).&#10;FORMATS t pval (F11.3) DF (F8.0).&#10;OMS /SELECT ALL EXCEPT=WARNINGS &#10;  /IF COMMANDS=['Alter Type'] &#10;  /DESTINATION VIEWER=NO&#10;  /TAG='Quade_NoAT'.&#10;ALTER TYPE DF (A12)&#10;  /PRINT NONE.&#10;OMSEND TAG=['Quade_NoAT'].&#10;VARIABLE LABELS t '     t' DF 'DF' pval 'P Value'.&#10;EXECUTE.&#10;&quot;&quot;&quot;)&#10;    data2=[]&#10;    cur=spss.Cursor(isBinary=False)&#10;    for i in range(0,spss.GetCaseCount()):&#10;        datarow=cur.fetchone()&#10;        data2.append(datarow[0:])&#10;    cur.close()&#10;    def _flatten(seq):&#10;        for item in seq:&#10;            if spssaux._isseq(item):&#10;                for subitem in _flatten(item):&#10;                    yield subitem&#10;            else:&#10;                yield item&#10;    data2=[item for item in _flatten(data2)]&#10;    collabels2=[CellText.String(spss.GetVariableLabel(0)),CellText.String(spss.GetVariableLabel(1)),CellText.String(spss.GetVariableLabel(2))]&#10;    spss.Submit(&quot;&quot;&quot;&#10;DATASET ACTIVATE Quade_out1 WINDOW=ASIS.&#10;FORMATS F sig (F11.3) DFH DFE (F8.0).&#10;VARIABLE LABELS F '          F' DFH 'DFH' DFE 'DFE' sig 'P Value'.&#10;EXECUTE.&#10;OMS&#10;  /SELECT TABLES &#10;  /IF SUBTYPES=['Notes']&#10;  /DESTINATION VIEWER=NO&#10;  /TAG = 'Quade_NoNotes'.&#10;OMS&#10;  /SELECT TEXTS&#10;  /IF LABELS=['Active Dataset']&#10;  /DESTINATION VIEWER=NO&#10;  /TAG = 'Quade_NoDSN'.&#10;&quot;&quot;&quot;)&#10;    cur=spss.Cursor(isBinary=False)&#10;    data1=cur.fetchone()&#10;    cur.close()&#10;    spss.StartProcedure(&quot;Quade Nonparametric ANCOVA&quot;)&#10;    table1 = spss.BasePivotTable(&quot;Quade Nonparametric Analysis of Covariance&quot;,&quot;Quade Nonparametric ANCOVA Test&quot;)&#10;    table1.SimplePivotTable(rowdim = spss.GetVariableLabel(0),&#10;                       rowlabels = [CellText.String(&quot;{:&gt;14.3f}&quot;.format(data1[0]))],&#10;                       coldim = &quot;&quot;,&#10;                       collabels = [CellText.String(spss.GetVariableLabel(1)),CellText.String(spss.GetVariableLabel(2)),CellText.String(spss.GetVariableLabel(3))],&#10;                       cells = [CellText.Number(data1[1],spss.FormatSpec.Count),CellText.Number(data1[2],spss.FormatSpec.Count),CellText.Number(data1[3])])&#10;    table2=spss.BasePivotTable(&quot;Pairwise Comparisons of Groups&quot;,&quot;Pairwise Comparisons&quot;)&#10;    rowlabels2=[(CellText.String(rlabels2[i])) for i in range(len(rlabels2))]&#10;    table2.SimplePivotTable(rowdim=&quot;Comparison&quot;,&#10;                rowlabels=rowlabels2,&#10;                coldim=&quot;&quot;,&#10;                collabels=collabels2,&#10;                cells=data2)&#10;    spss.EndProcedure()&#10;finally:&#10;    spss.Submit(&quot;DATASET ACTIVATE %s WINDOW=ASIS&quot; % activeds)&#10;    try:&#10;        spss.Submit(&quot;&quot;&quot;&#10;OMSEND TAG=['Quade_NoDSN'].&#10;OMSEND TAG=['Quade_NoNotes'].&#10;DATASET CLOSE Quade_temp1.&#10;DATASET CLOSE Quade_out1.&#10;DATASET CLOSE Quade_out2.&#10;ERASE FILE='Quade_temp.sav'.&#10;&quot;&quot;&quot;)&#10;    except:&#10;        pass&#10;    spss.Submit(&quot;RESTORE&quot;)&#10;end program.&#10;"/>
      <Property description="false" name="STATS_QUADE_ANCOVA_modal"/>
      <Property description="" descriptionKey="source_vars_tooltip.LABEL" isList="true" label="Variables:" labelKey="source_vars.LABEL" name="source_vars" selectionPool="source_fields" syntax="%%ThisValue%%" valueType="field"/>
      <Property description="" descriptionKey="dep_tooltip.LABEL" isList="true" isRequired="true" label="Dependent Variable:" labelKey="dep.LABEL" name="dep" selectionPool="source_fields" syntax="%%ThisValue%%" valueType="field"/>
      <Property description="" descriptionKey="group_tooltip.LABEL" isList="true" isRequired="true" label="Grouping Factor:" labelKey="group.LABEL" name="group" selectionPool="source_fields" syntax="%%ThisValue%%" valueType="field"/>
      <Property description="" descriptionKey="cov_tooltip.LABEL" isList="true" isRequired="true" label="Covariate(s):" labelKey="cov.LABEL" name="cov" selectionPool="source_fields" syntax="%%ThisValue%%" valueType="field"/>
    </Properties>
    <SelectionPool id="source_fields" type="fields"/>
    <UserInterface>
      <Tabs>
        <Tab helpLink="STATS_QUADE_ANCOVA.htm">
          <PropertiesPanel>
            <SourceFieldsBrowser copyFields="false" property="source_vars" selectionPool="source_fields" storage="[real integer date time string]">
              <Layout columnWeight="1.0" fill="both" gridColumn="0" gridRow="0" gridWidth="1" rowWeight="1.0"/>
            </SourceFieldsBrowser>
            <SingleFieldChooserControl mnemonic="D" mnemonicKey="dep_mnemonic.VALUE" property="dep" storage="[real integer date time]">
              <Layout columnWeight="1.0" fill="horizontal" gridColumn="2" gridRow="0" gridWidth="1" rowWeight="0.0"/>
            </SingleFieldChooserControl>
            <SingleFieldChooserControl mnemonic="F" mnemonicKey="group_mnemonic.VALUE" property="group" storage="[real integer string]">
              <Layout columnWeight="1.0" fill="horizontal" gridColumn="2" gridRow="1" gridWidth="1" rowWeight="0.0"/>
            </SingleFieldChooserControl>
            <MultiFieldChooserControl mnemonic="C" mnemonicKey="cov_mnemonic.VALUE" property="cov" storage="[real integer date time]">
              <Layout columnWeight="1.0" fill="both" gridColumn="2" gridRow="2" gridWidth="1" rowWeight="1.0"/>
            </MultiFieldChooserControl>
            <StaticText text="This dialog requires the Python Essentials" textKey="item_19.LABEL">
              <Layout columnWeight="1.0" fill="none" gridColumn="0" gridRow="1" gridWidth="1" rowWeight="0.0"/>
            </StaticText>
            <StaticText text="This dialog was created using a later version of IBM SPSS Statistics\nand certain features may not function as intended." textKey="v17_warning.LABEL">
              <Layout columnWeight="1.0" fill="horizontal" gridColumn="0" gridRow="2" gridWidth="1" rowWeight="1.0"/>
            </StaticText>
          </PropertiesPanel>
        </Tab>
      </Tabs>
    </UserInterface>
  </Node>
</Extension>